#!/opt/bin/python
import sys
from optparse import OptionParser,OptionGroup
import time
from exprsQC import exprs_qc
from exprsQC import utils
#from utils import monitor_controlC,isfile


def __main():
	start_time = time.time()
	usage = "usage: %prog [options] matrix_like_data.anno"
	description = "Contact: Rong Zhengqin <zju3351689@gmail.com>"
	parser = OptionParser(usage,version="%prog 1.0.0",description = description)
	Required_group = OptionGroup(parser,'Required parameters')
	
	Required_group.add_option('-s',dest='sample_info',help='samples information, using sample_info.txt format',metavar='FILE',type='string',default=None)
	
	Optional_group = OptionGroup(parser,'Optional parameters')
	
	Optional_group.add_option('-t',dest='phenotype',help="type of phenotype, category or quantificat [default = category]",metavar='STR',type='choice',choices=["category","quantificat"],default='category')
	Optional_group.add_option('--normalize',dest='normalize',help='select to do data normalize',action='store_true')
	Optional_group.add_option('-l',dest='log2tr',help='select to do log2 transform for expression data',action='store_true')
	Optional_group.add_option('--noise',dest='noise',help='noise cutoff, default=-1',metavar='FLOAT',type='float',default=-1)
	Optional_group.add_option('--addbg',dest='addbg',help='add backgroud for log2 transform, default=0',metavar='FLOAT',type='float',default=0)
	
	parser.add_option_group(Required_group)
	parser.add_option_group(Optional_group)

	(options, args) = parser.parse_args()

	if len(args) != 1:
		parser.print_help()
		return 999
	ret = 1
	
	try:
		opt = exprs_qc.exprsqc_opt()
	except:
		sys.stderr.write("[ERROR] options can not assign, check input\n")
		return ret
	opt.phenotype = options.phenotype
	if options.log2tr:
		opt.log2tr = 1
	opt.sample_info = options.sample_info
	opt.matrixdata = args[0]
	
	if utils.isfile(opt.sample_info):
		sys.stderr.write("[ERROR] can not find file '%s', please check\n"%opt.sample_info)
		return ret
	if utils.isfile(opt.matrixdata):
		sys.stderr.write("[ERROR] can not find file '%s', please check\n"%opt.matrixdata)
		return ret

	opt.noise = options.noise
	opt.addbg = options.addbg

	if None == opt.sample_info:
		parser.error("Please use the '-s' option to assign samples information")
		return ret
	ret = exprs_qc.qcrun(opt)
	if ret == 0:
		cost_time = time.time()-start_time
		opt.destroy()
		sys.stderr.write("[INFO] Time consumed: %.3fs\n"%cost_time)
	return ret

if __name__ == "__main__":
	utils.monitor_controlC()
	ret = __main()
	if 0 == ret:
		sys.stderr.write("[INFO] Task Done.\n")
		exit(0)
	elif 999 == ret:
		sys.stderr.write("[ERROR] incorrect number of arguments\n")
		exit(1)
	else:
		sys.stderr.write("[ERROR] Task interrupt: Error!\n")
		exit(1)

